{
//   "extends": [
//     "airbnb",
//     "airbnb-typescript",
//     "eslint-config-prettier",
//     "eslint:recommended",
//     "plugin:react/recommended"
//   ],
//   "plugins": [
//     "eslint-plugin-prettier"
//   ],
//   "parserOptions": {
//       "project": ["tsconfig.json"]
//   },

/* DESDE ACA */

//  "rules":{
//   "prettier/prettier": ["error", { "printWidth": 110, "singleQuote": true }],
//   "@typescript-eslint/no-shadow": "error",
//   "default-param-last": 0,
//   // Import
//   "import/order": ["error", { "groups": [["builtin", "external", "internal"]] }],
//   "import/named": "error",
//   "import/no-duplicates": "error",
//   "import/newline-after-import": "error",
//   "import/no-cycle": ["error", { "maxDepth": 100 }],
//   "import/no-useless-path-segments": "error",
//   "import/prefer-default-export": "off",

//   // Eslint Possible Errors - https://eslint.org/docs/rules/#possible-errors
//   "for-direction": "error",
//   "getter-return": "error",
//   "no-async-promise-executor": "error",
//   "no-compare-neg-zero": "error",
//   "no-cond-assign": "error",
//   "no-console": "warn",
//   "no-control-regex": "error",
//   "no-constant-condition": "error",
//   "no-debugger": "error",
//   "no-dupe-args": "error",
//   "no-dupe-keys": "error",
//   "no-duplicate-case": "error",
//   "no-empty": "error",
//   "no-empty-character-class": "error",
//   "no-ex-assign": "error",
//   "no-extra-boolean-cast": "error",
//   "no-extra-parens": ["error", "functions"],
//   "no-extra-semi": "error",
//   "no-func-assign": "error",
//   "no-inner-declarations": "error",
//   "no-invalid-regexp": "error",
//   "no-irregular-whitespace": "error",
//   "no-misleading-character-class": "error",
//   "no-obj-calls": "error",
//   "no-prototype-builtins": "error",
//   "no-regex-spaces": "error",
//   "no-sparse-arrays": "error",
//   "no-template-curly-in-string": "error",
//   "no-unexpected-multiline": "error",
//   "no-unsafe-finally": "error",
//   "no-unsafe-negation": "error",
//   "no-unreachable": "error",
//   "require-atomic-updates": "error",
//   "use-isnan": "error",
//   "valid-jsdoc": "error",
//   "valid-typeof": "error",

//   // Eslint Best Practises - https://eslint.org/docs/rules/#best-practices
//   "array-callback-return": "error",
//   "block-scoped-var": "error",
//   "class-methods-use-this": "error",
//   "complexity": ["error", 10],
//   "consistent-return": "error",
//   "curly": ["error", "all"],
//   "default-case": "error",
//   "dot-notation": "error",
//   "eqeqeq": "error",
//   "guard-for-in": "error",
//   "max-classes-per-file": ["error", 1],
//   "no-alert": "error",
//   "no-caller": "error",
//   "no-case-declarations": "error",
//   "no-div-regex": "error",
//   "no-else-return": "error",
//   "no-empty-function": "error",
//   "no-empty-pattern": "error",
//   "no-eq-null": "error",
//   "no-eval": "error",
//   "no-extend-native": "error",
//   "no-extra-bind": "error",
//   "no-fallthrough": "error",
//   "no-floating-decimal": "error",
//   "no-global-assign": "error",
//   "no-implicit-coercion": ["error", { "boolean": false }],
//   "no-implicit-globals": "error",
//   "no-implied-eval": "error",
//   "no-iterator": "error",
//   "no-labels": "error",
//   "no-lone-blocks": "error",
//   "no-loop-func": "error",
//   "no-magic-numbers": [
//     "error",
//     { "ignore": [0, 1, -1, 2], "enforceConst": true }
//   ],
//   "no-multi-spaces": "error",
//   "no-new": "error",
//   "no-new-func": "error",
//   "no-octal": "error",
//   "no-octal-escape": "error",
//   "no-param-reassign": "error",
//   "no-proto": "error",
//   "no-redeclare": "error",
//   "no-return-assign": "error",
//   "no-return-await": "error",
//   "no-script-url": "error",
//   "no-self-assign": "error",
//   "no-self-compare": "error",
//   "no-sequences": "error",
//   "no-throw-literal": "error",
//   "no-unmodified-loop-condition": "error",
//   "no-unused-expressions": "error",
//   "no-useless-call": "error",
//   "no-useless-concat": "error",
//   "no-useless-escape": "error",
//   "no-useless-return": "error",
//   "no-void": "error",
//   "no-with": "error",
//   "prefer-promise-reject-errors": "error",
//   "require-await": "error",
//   "vars-on-top": "error",
//   "yoda": "error",

//   // Eslint Variables - https://eslint.org/docs/rules/#variables
//   "init-declarations": "error",
//   "no-delete-var": "error",
//   "no-shadow": "off",
//   "no-shadow-restricted-names": "error",
//   "no-catch-shadow":"off",
//   "no-undef": "error",
//   "no-unused-vars": "error",
//   "no-use-before-define": "error",

//   // Eslint Stylistic Issues - https://eslint.org/docs/rules/#stylistic-issues
//   "array-bracket-spacing": "error",
//   "block-spacing": "error",
//   "brace-style": "error",
//   "camelcase": ["error", { "allow": ["^.*_plural$"] }],
//   "comma-dangle": "error",
//   "comma-spacing": "error",
//   "comma-style": "error",
//   "computed-property-spacing": "error",
//   "eol-last": "error",
//   "func-call-spacing": "error",
//   "func-name-matching": "error",
//   "func-names": "error",
//   "id-length": ["error", { "min": 1, "max": 30 }],
//   "indent": ["error", 2, { "SwitchCase": 1, "ignoredNodes": ["ObjectExpression"] }],
//   "jsx-quotes": ["error", "prefer-double"],
//   "key-spacing": "error",
//   "line-comment-position": "error",
//   "linebreak-style": "error",
//   "lines-between-class-members": "error",
//   "max-depth": "error",
//   "max-lines": "error",
//   "max-nested-callbacks": ["error", { "max": 3 }],
//   "max-params": ["error", 4],
//   "max-statements": ["error", { "max": 30 }],
//   "max-statements-per-line": "error",
//   "new-cap": "error",
//   "new-parens": "error",
//   "no-array-constructor": "error",
//   "no-bitwise": "error",
//   "no-continue": "error",
//   "no-lonely-if": "error",
//   "no-mixed-operators": "error",
//   "no-mixed-spaces-and-tabs": "error",
//   "no-multi-assign": "error",
//   "no-multiple-empty-lines": ["error", { "max": 2, "maxEOF": 1 }],
//   "no-negated-condition": "error",
//   "no-nested-ternary": "error",
//   "no-tabs": "error",
//   "no-trailing-spaces": "error",
//   "no-underscore-dangle": "error",
//   "no-unneeded-ternary": "error",
//   "no-whitespace-before-property": "error",
//   "object-curly-spacing": ["error", "always"],
//   "object-property-newline": [
//     "error",
//     { "allowAllPropertiesOnSameLine": true }
//   ],
//   "one-var-declaration-per-line": "error",
//   "operator-linebreak": [
//     "error",
//     "after",
//     { "overrides": { "?": "before", ":": "before" } }
//   ],
//   "padded-blocks": ["error", "never"],
//   "prefer-object-spread": "error",
//   "quote-props": ["error", "as-needed"],
//   "quotes": ["error", "single", { "avoidEscape": true }],
//   "semi": "error",
//   "semi-spacing": ["error", { "before": false, "after": true }],
//   "semi-style": "error",
//   "space-before-blocks": "error",
//   "keyword-spacing": "error",
//   "space-in-parens": "error",
//   "space-infix-ops": "error",
//   "space-unary-ops": ["error", { "words": true, "nonwords": false }],
//   "spaced-comment": "error",
//   "switch-colon-spacing": "error",
//   "template-tag-spacing": "error",
//   "unicode-bom": "error",
//   "@typescript-eslint/no-explicit-any": ["off"],
//   // Eslint ECMASCRIPT 6 - https://eslint.org/docs/rules/#ecmascript-6
//   "arrow-body-style": "error",
//   "constructor-super": "error",
//   "generator-star-spacing": "error",
//   "no-class-assign": "error",
//   "no-confusing-arrow": "off", // conflicts with prettier
//   "no-const-assign": "error",
//   "no-dupe-class-members": "error",
//   "no-duplicate-imports": "error",
//   "no-new-symbol": "error",
//   "no-this-before-super": "error",
//   "no-useless-computed-key": "error",
//   "no-useless-constructor": "error",
//   "no-useless-rename": "error",
//   "no-var": "error",
//   "object-shorthand": "error",
//   "prefer-arrow-callback": "error",
//   "prefer-const": "error",
//   "prefer-destructuring": ["error", { "object": true, "array": false }],
//   "prefer-numeric-literals": "error",
//   "prefer-rest-params": "error",
//   "prefer-spread": "error",
//   "prefer-template": "error",
//   "require-yield": "error",
//   "rest-spread-spacing": "error",
//   "symbol-description": "error",
//   "template-curly-spacing": "error",
//   "yield-star-spacing": "error",
//   "react/react-in-jsx-scope": "off",
//   "import/no-extraneous-dependencies": [
//     "error",
//     {
//       "devDependencies": [
//         "**/*"
//       ],
//       "peerDependencies": true
//     }
//   ]
//  },
//  "globals": {
//   "document": false,
//   "React": true,
//   "google": true,
//   "mount": true,
//   "mountWithRouter": true,
//   "shallow": true,
//   "shallowWithRouter": true,
//   "context": true,
//   "expect": true,
//   "jsdom": true,
//   "JSX": true
// },
//   "settings": {
//     "react": {
//       "version": "detect"
//     }
//   },

// "extends": [
//   "airbnb-typescript",
//   "plugin:@typescript-eslint/recommended",
//   "plugin:jest/recommended",
//   "plugin:react/recommended",
//   "plugin:react-hooks/recommended",
//   "plugin:prettier/recommended"
// ],
// "plugins": ["@typescript-eslint", "import", "prettier"],
// "env": {
//   "es6": true,
//   "jest/globals": true,
//   "node": true,
//   "browser": true
// },
// "parserOptions": {
//   "project": ["./tsconfig.json"],
//   "ecmaFeatures": {
//     "jsx": true,
//     "tsx":true
//   },
// }

/* HASTA ACA */

//   "ecmaVersion": 8,
//   "sourceType": "module",
//   "extraFileExtensions": [".html", ".md", ".json", ".svg", ".tag"],
// },
// "settings": {
//   "react": {
//     "version": "detect",
//   }
// },
// "overrides": [
//   {
//     "files": ["**/*.tsx', '**/*.ts"],
//     "rules": {
//       "react/require-default-props": "off",
//       "react/prop-types": "off", // we should use types
//       "react/forbid-prop-types": "off", // we should use types
//     },
//   },
//   {
//     "files": ["**/*.d.ts"],
//     "rules": {
//       "vars-on-top": "off",
//       "no-var": "off", // this is how typescript works
//       "spaced-comment": "off",
//     },
//   },
// ],
// "rules": {
//   "@typescript-eslint/ban-ts-ignore": "off",
//   "@typescript-eslint/camelcase": "off",
//   "@typescript-eslint/explicit-function-return-type": "off",
//   "@typescript-eslint/explicit-member-accessibility": "off",
//   "@typescript-eslint/explicit-module-boundary-types": "off",
//   "@typescript-eslint/interface-name-prefix": "off",
//   "@typescript-eslint/no-empty-function": "off",
//   "@typescript-eslint/no-explicit-any": "off",
//   "@typescript-eslint/no-object-literal-type-assertion": "off",
//   "@typescript-eslint/no-unused-vars": "off",
//   "@typescript-eslint/no-use-before-define": "off",
//   "@typescript-eslint/no-var-requires": "off",
//   "progress/activate": 1,
//   "class-methods-use-this": "off",
//   "import/default": "error",
//   "import/extensions": [
//     "error",
//     "never",
//     {
//       "ignorePackages": true,
//       "json": "always",
//       "md": "always",
//       "svg": "always",
//       "tag": "always",
//     },
//   ],
//   "import/named": "error",
//   "import/namespace": "error",
//   "import/no-extraneous-dependencies": [
//     "error",
//     {
//       "devDependencies": [
//         "examples/**",
//         "examples-native/**",
//         "'**/example/**",
//         "'*.js",
//         "**/*.test.js",
//         "**/*.stories.*",
//         "**/scripts/*.js",
//         "**/stories/**/*.js",
//         "**/__tests__/**/*.js",
//         "**/.storybook/**/*.*"
//       ],
//       "peerDependencies": true
//     }
//   ],
//   "import/no-unresolved": [
//     "error",
//     {
//       "ignore": ["@storybook"]
//     }
//   ],
//   "import/prefer-default-export": "off"
// }


"env": {
  "browser": true,
  "es2021": true,
  "jest": true
},
"extends": [
  "react-app",
  "react-app/jest",
  "airbnb",
  "airbnb-typescript",
  "plugin:import/typescript",
  "plugin:prettier/recommended",
  "plugin:testing-library/react"
],
"parser": "@typescript-eslint/parser",
"parserOptions": {
  "ecmaFeatures": {
      "jsx": true
  },
  "ecmaVersion": "latest",
  "sourceType": "module",
  "project": "./tsconfig.json"
},
"plugins": [
  "testing-library"
],
"rules": {
  "react/react-in-jsx-scope": ["off"],
  "react/jsx-uses-react": ["off"],
  // "react/jsx-props-no-spreading": ["warn"],
  "react/no-unescaped-entities": ["off"],
  // Indent with 4 spaces
"indent": "off",

// Indent JSX with 4 spaces
"react/jsx-indent": "off",
"import/no-extraneous-dependencies": ["error",  {"devDependencies": true}],
"react/jsx-props-no-spreading":0,
// Indent props with 4 spaces
"react/jsx-indent-props": "off",
"quotes": "off",
"@typescript-eslint/quotes": "off",
"jsx-quotes": ["off"],
"no-return-assign":"off",
"react/require-default-props": "off",
"react/prop-types": "off", // we should use types
"react/forbid-prop-types": "off", // we should use types
"no-undef-init": "off",
"react/function-component-definition": 0,
"import/prefer-default-export": 0,
"no-param-reassign": [2, { "props": false }],
"react/jsx-no-constructed-context-values": 0,
"@typescript-eslint/default-param-last":0,
"react/jsx-no-useless-fragment":0
}
}
